# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: test
permissions:
  contents: read
  pull-requests: write
on:
  workflow_dispatch:
  push:
    branches: [ master ]
    paths-ignore:
      - "*.md"
      - ".github/**"
  pull_request:
    branches: [ master ]
    paths-ignore:
      - "*.md"
      - ".github/**"

jobs:
  setup-redis:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --name redis
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Install redis-cli
        id: set-env
        run: |
          sudo apt-get install redis-tools
      - name: keepalive
        run: |
          #!/bin/bash
          hostname
          redis-cli ping
          redis-cli -h localhost ping
          redis-cli -h $(hostname) ping
          MAX_ATTEMPTS=60
          redis-cli set redis-server-alive-counter 0
          while [ "$(redis-cli get redis-server-alive-counter)" -lt $MAX_ATTEMPTS ]; do
              echo "Sleeping for 1 second..."
              sleep 1
              redis-cli incr redis-server-alive-counter
          done

  wait-for-redis-server:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Install redis-cli
        run: sudo apt-get install redis-tools
      - name: Wait for redis-server ready
        run: |
          hostname
          WAIT_FOR_REDIS_SERVER_COUNTER=0
          while true; do
            if redis-cli ping &> /dev/null; then
              echo "redis-server is running."
              break
            else
              echo "Attempt $WAIT_FOR_REDIS_SERVER_COUNTER: redis-server is not responding. Retrying in 1 second..."
              WAIT_FOR_REDIS_SERVER_COUNTER=$((WAIT_FOR_REDIS_SERVER_COUNTER+1))
              sleep 1            
              if [ "$WAIT_FOR_REDIS_SERVER_COUNTER" -gt 60 ]; then
                echo "WAIT_FOR_REDIS_SERVER_COUNTER exceeded 60. Breaking the loop."
                break
              fi
            fi
          done
          redis-cli set redis-server-alive-counter 0

  build-and-test:
    needs: [wait-for-redis-server]
    strategy:
      matrix:
        dotnet:
          - version: '3.1.x'
            framework: 'netcoreapp3.1'
          - version: '5.0.x'
            framework: 'net5.0'
          - version: '6.0.x'
            framework: 'net6.0'
          - version: '7.0.x'
            framework: 'net7.0'
          - version: '8.0.x'
            framework: 'net8.0'
          - version: '9.0.x'
            framework: 'net9.0'
        configuration: [ Debug, Release ]
    uses: ./.github/workflows/build-and-test.yml
    secrets:
      WEIXIN__APPID: ${{ secrets.WEIXIN__APPID }}
      WEIXIN__APPSECRET: ${{ secrets.WEIXIN__APPSECRET }}
    with:
      dotnet-version: ${{ matrix.dotnet.version }}
      dotnet-framework: ${{ matrix.dotnet.framework }}
      configuration: ${{ matrix.configuration }}
      redis_host: localhost
      redis_port: 6379

  shutdown-redis:
    runs-on: ubuntu-latest
    needs: [build-and-test]
    if: ${{ always() }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Install redis-cli
        run: sudo apt-get install redis-tools
      - name: Keep alive
        run: |
          hostname
          redis-cli ping
          redis-cli set redis-server-alive-counter 9999

      