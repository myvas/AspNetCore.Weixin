<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Myvas.AspNetCore.Weixin</name>
    </assembly>
    <members>
        <!-- Badly formed XML comment ignored for member "T:Myvas.AspNetCore.Weixin.AccessTokenApi" -->
        <member name="M:Myvas.AspNetCore.Weixin.AccessTokenApi.GetTokenAsync(System.String,System.String)">
            <summary>
            获取微信凭证
            <para>access_token是公众号的全局唯一票据，公众号调用各接口时都需使用access_token。正常情况下access_token有效期为7200秒，重复获取将导致上次获取的access_token失效。由于获取access_token的api调用次数非常有限，建议开发者全局存储与更新access_token，频繁刷新access_token会导致api调用受限，影响自身业务。</para>
            <para>请开发者注意，由于技术升级，公众平台的开发接口的access_token长度将增长，其存储至少要保留512个字符空间。此修改将在1个月后生效，请开发者尽快修改兼容。</para>
            <para>公众号可以使用AppID和AppSecret调用本接口来获取access_token。AppID和AppSecret可在开发模式中获得（需要已经成为开发者，且帐号没有异常状态）。注意调用所有微信接口时均需使用https协议。</para>
            </summary>
            <param name="appid">开发者ID之AppId。
            <para>例如：<code>wxd8fb1eb9ecf48d15</code></para></param>
            <param name="secret">开发者ID之AppSecret。
            <para>例如：<code>b7ffe201d9f7db183b8827ebe789aa88</code></para></param>
            <param name="grantType">默认为：<code>client_credential</code></param>
            <returns>微信凭证数据
            <para>正常情况下，微信会返回下述JSON数据包给公众号。例如：</para>
            <code>{"access_token":"ACCESS_TOKEN","expires_in":7200}</code>
            </returns>
            <exception cref="T:Myvas.AspNetCore.Weixin.WeixinException">
            <para>错误时微信会返回错误码等信息，JSON数据包示例如下（该示例为AppID无效错误）:</para>
            <code>{"errcode":40013,"errmsg":"invalid appid"}</code>
            </exception>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.AccessTokenJson">
            <summary>
            微信全局访问票据数据。调用微信API接口时必须。</summary>
            <example>
            正常情况下，微信会返回下述JSON数据包给公众号：
            <code>
            {"access_token":"ACCESS_TOKEN","expires_in":7200}</code>
            错误时微信会返回错误码等信息，JSON数据包示例如下（该示例为AppID无效错误）:
            <code>
            {"errcode":40013,"errmsg":"invalid appid"}</code></example>
            <remarks>
            <list type="bullet"><item>
            调用所有微信接口时均需使用https协议。
            </item><item>
            获取access_token的api调用频率限制：每日限额2000次（测试号为200次）。
            </item><item>
            重复获取将导致上次获取的access_token失效。
            </item></list></remarks>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.AccessTokenJson.access_token">
            <summary>
            微信公众号全局唯一票据。存储空间需要512个字符或以上。
            </summary>
            <example>XkC7gqcx7pctuGe5zPIita23N7dJKIfkwz_2ULReV_Pn7T09lMyhTwlgGK5cghtqGQlPUlZ7ur_nMqhGuJNXwA</example>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.AccessTokenJson.expires_in">
            <summary>
            凭证有效时间。单位：秒。
            <para>例如：7200</para>
            </summary>
            <example></example>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.MemoryCachedWeixinAccessToken">
            <summary>
            
            </summary>
            <remarks>DI: Singleton</remarks>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.Custom">
            <summary>
            客服接口
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.Custom.SendText(System.String,System.String,System.String)">
            <summary>
            发送文本信息
            </summary>
            <param name="accessToken"></param>
            <param name="openId"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.Custom.SendImage(System.String,System.String,System.String)">
            <summary>
            发送图片消息
            </summary>
            <param name="accessToken"></param>
            <param name="openId"></param>
            <param name="mediaId"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.Custom.SendVoice(System.String,System.String,System.String)">
            <summary>
            发送语音消息
            </summary>
            <param name="accessToken"></param>
            <param name="openId"></param>
            <param name="mediaId"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.Custom.SendVideo(System.String,System.String,System.String,System.String)">
            <summary>
            发送视频消息
            </summary>
            <param name="accessToken"></param>
            <param name="openId"></param>
            <param name="mediaId"></param>
            <param name="thumbMediaId"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.Custom.SendMusic(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            发送音乐消息
            </summary>
            <param name="accessToken"></param>
            <param name="openId"></param>
            <param name="title">音乐标题（非必须）</param>
            <param name="description">音乐描述（非必须）</param>
            <param name="musicUrl">音乐链接</param>
            <param name="hqMusicUrl">高品质音乐链接，wifi环境优先使用该链接播放音乐</param>
            <param name="thumbMediaId">视频缩略图的媒体ID</param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.Custom.SendNews(System.String,System.String,System.Collections.Generic.List{Myvas.AspNetCore.Weixin.Article})">
            <summary>
            发送图文消息
            </summary>
            <param name="accessToken"></param>
            <param name="openId"></param>
            <param name="articles"></param>
            <returns></returns>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.GroupMessage">
            <summary>
            高级群发接口
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.GroupMessage.SendGroupMessageByGroupId(System.String,System.String,System.String)">
            <summary>
            根据分组进行群发
            
            请注意：
            1、该接口暂时仅提供给已微信认证的服务号
            2、虽然开发者使用高级群发接口的每日调用限制为100次，但是用户每月只能接收4条，请小心测试
            3、无论在公众平台网站上，还是使用接口群发，用户每月只能接收4条群发消息，多于4条的群发将对该用户发送失败。
            
            </summary>
            <param name="accessToken"></param>
            <param name="groupId">群发到的分组的group_id</param>
            <param name="mediaId">用于群发的消息的media_id</param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.GroupMessage.SendGroupMessageByOpenId(System.String,System.String,System.String[])">
            <summary>
            根据OpenId进行群发
            </summary>
            <param name="accessToken"></param>
            <param name="mediaId">用于群发的消息的media_id</param>
            <param name="openIds">openId字符串数组</param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.GroupMessage.DeleteSendMessage(System.String,System.String)">
            <summary>
            删除群发消息
            </summary>
            <param name="accessToken"></param>
            <param name="mediaId">发送出去的消息ID</param>
            <returns></returns>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.NewsModel">
            <summary>
            图文消息模型
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.NewsModel.thumb_media_id">
            <summary>
            图文消息缩略图的media_id，可以在基础支持上传多媒体文件接口中获得
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.NewsModel.author">
            <summary>
            图文消息的作者
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.NewsModel.title">
            <summary>
            图文消息的标题
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.NewsModel.content_source_url">
            <summary>
            在图文消息页面点击“阅读原文”后的页面
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.NewsModel.content">
            <summary>
            图文消息页面的内容，支持HTML标签
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.NewsModel.digest">
            <summary>
            图文消息的描述
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.SendResult">
            <summary>
            发送信息后的结果
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.SendResult.type">
            <summary>
            媒体文件类型，分别有图片（image）、语音（voice）、视频（video）和缩略图（thumb），图文消息为news
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.SendResult.msg_id">
            <summary>
            消息ID
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.MediaApi">
            <summary>
            多媒体文件接口
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.MediaApi.Upload(System.String,Myvas.AspNetCore.Weixin.UploadMediaType,System.String)">
            <summary>
            上传媒体文件。
            指定文件路径、文件格式和有效的访问令牌，将文件发送给微信服务器。
            
            注意：微信服务器只保存3天。
            </summary>
            <param name="accessToken">访问令牌</param>
            <param name="type">文件类型。支持JPG, MP3, MP4, AMR等格式，详见<see cref="T:Myvas.AspNetCore.Weixin.UploadMediaType"/></param>
            <param name="file">文件路径</param>
            <returns>若成功，则返回上传成功的时间、文件格式、以及资源ID；若失败，则抛出异常。</returns>
            <exception cref="T:Myvas.AspNetCore.Weixin.WeixinException">下载不成功，则抛出该异常</exception>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.MediaApi.GetAllMaterialsAsync(System.String,Myvas.AspNetCore.Weixin.MaterialType)">
            <summary>
            
            </summary>
            <param name="accessToken"></param>
            <param name="materialType">news, image, video, voice</param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.MediaApi.DownloadFile(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            下载媒体文件。
            <para>下载成功后，将在指定位置创建一个文件。</para>
            </summary>
            <param name="accessToken">访问令牌</param>
            <param name="mediaId">媒体ID</param>
            <param name="filePath">文件路径。
            <para>路径首尾不要加斜杠(/)，或反斜杠(\）！</para>
            <para>若为空，则默认为根虚拟路径（~/）对应的物理路径。</para></param>
            <param name="folderName">文件夹名。
            <para>文件夹名首尾不要加斜杠(/)，或反斜杠(\）！</para></param>
            <param name="fileName">文件名。
            <para>若为空，则自动获取一个GUID作为文件名。</para></param>
            <param name="fileExtensionName">文件扩展名。
            <para>文件扩展名一般以点号(.)开始。</para>
            <para>若为空，则自动从服务器响应头中取得（Content-Disposition中的filename的扩展名）。</para></param>
            <returns>字符串。文件存放的物理路径及文件名（含文件扩展名）</returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.MediaApi.UploadNews(System.String,Myvas.AspNetCore.Weixin.NewsModel[])">
            <summary>
            上传图文消息素材
            </summary>
            <param name="accessToken">Token</param>
            <param name="news">图文消息组</param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.MediaApiHelper.GetAllCounts(System.Text.Json.JsonDocument,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
             openid
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.DownloadMediaType">
            <summary>
            可下载的多媒体文件格式
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.DownloadMediaType.image">
            <summary>
            图片: 1MB，支持JPG格式
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.DownloadMediaType.voice">
            <summary>
            语音：2MB，播放长度不超过60s，支持AMR\MP3格式
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.DownloadMediaType.video">
            <summary>
            视频：10MB，支持MP4格式。不支持下载。
            </summary>
            <remarks>这里（<see cref="!:http://mp.weixin.qq.com/wiki/index.php?title=%E4%B8%8A%E4%BC%A0%E4%B8%8B%E8%BD%BD%E5%A4%9A%E5%AA%92%E4%BD%93%E6%96%87%E4%BB%B6"/>）说“视频文件不支持下载”，但经测试，微信手机发上来的视频是可以下载的。</remarks>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.DownloadMediaType.thumb">
            <summary>
            thumb：64KB，支持JPG格式
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.MediaType">
            <summary>
            上传媒体文件类型
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.MediaType.image">
            <summary>
            图片: 1M，支持JPG格式
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.MediaType.voice">
            <summary>
            语音：2M，播放长度不超过60s，支持AMR\MP3格式
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.MediaType.video">
            <summary>
            视频：1MB，支持MP4格式
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.MediaType.thumb">
            <summary>
            thumb：64KB，支持JPG格式
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.MediaType.news">
            <summary>
            图文消息
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.MediaUploadResultJson">
            <summary>
            上传媒体文件返回结果
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.UploadMediaType">
            <summary>
            可上传的多媒体文件格式
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.UploadMediaType.image">
            <summary>
            图片: 1MB，支持JPG格式
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.UploadMediaType.voice">
            <summary>
            语音：2MB，播放长度不超过60s，支持AMR\MP3格式
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.UploadMediaType.video">
            <summary>
            视频：10MB，支持MP4格式
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.UploadMediaType.thumb">
            <summary>
            thumb：64KB，支持JPG格式
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WeixinApiHelper.GetErrorCode(System.Text.Json.JsonDocument)">
            <summary>
             errcode
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WeixinApiHelper.GetErrorMessage(System.Text.Json.JsonDocument)">
            <summary>
             errmsg
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.MenuApi.CreateMenu(System.String,Myvas.AspNetCore.Weixin.ButtonGroup)">
            <summary>
            创建菜单
            </summary>
            <param name="accessToken"></param>
            <param name="buttonData">菜单内容</param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.MenuApi.CreateMenuAsync(System.String,System.String)">
            <summary>
            创建菜单
            </summary>
            <param name="accessToken"></param>
            <param name="buttonData">菜单内容</param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.MenuApi.GetSingleButtonFromJsonObject(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            获取单击按钮
            </summary>
            <param name="objs"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.MenuApi.GetMenuFromJson(System.String)">
            <summary>
            从JSON字符串获取菜单对象
            </summary>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.MenuApi.GetMenuAsync(System.String)">
            <summary>
            获取当前菜单，如果菜单不存在，将返回null
            </summary>
            <param name="accessToken"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.MenuApi.GetMenuFromJsonResult(Myvas.AspNetCore.Weixin.GetMenuResultFull)">
            <summary>
            根据微信返回的Json数据得到可用的GetMenuResult结果
            </summary>
            <param name="resultFull"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.MenuApi.DeleteMenu(System.String)">
            <summary>
            删除菜单
            </summary>
            <param name="accessToken"></param>
            <returns></returns>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.AbstractMenuButton">
            <summary>
            所有单击按钮的基类（view，click等）
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.AbstractMenuButton.type">
            <summary>
            按钮类型（click或view）
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.AbstractMenuButton.#ctor(System.String)">
            <summary>
            构造方法
            </summary>
            <param name="theType"></param>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.ButtonGroup">
            <summary>
            整个按钮设置（可以直接用ButtonGroup实例返回JSON对象）
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ButtonGroup.button">
            <summary>
            按钮数组，按钮个数应为2~3个
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.ClickMenuButton">
            <summary>
            单个按键
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ClickMenuButton.key">
            <summary>
            类型为click时必须。
            按钮KEY值，用于消息接口(event类型)推送，不超过128字节
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.GetMenuResult">
            <summary>
            GetMenu返回的Json结果
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.GetMenuResultFull">
            <summary>
            获取菜单时候的完整结构，用于接收微信服务器返回的Json信息
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.MenuButton">
            <summary>
            所有按钮基类
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.MenuButton.name">
            <summary>
            按钮描述，即按钮名字，不超过16个字节，子菜单不超过40个字节
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.SubMenuButton">
            <summary>
            子菜单
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.SubMenuButton.sub_button">
            <summary>
            子按钮数组，按钮个数应为2~5个
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.ViewMenuButton">
            <summary>
            Url按键
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ViewMenuButton.url">
            <summary>
            类型为view时必须
            网页链接，用户点击按钮可打开链接，不超过256字节
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.CreateQrCodeResult">
            <summary>
            二维码创建返回结果
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.CreateQrCodeResult.ticket">
            <summary>
            获取的二维码ticket，凭借此ticket可以在有效时间内换取二维码。
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.CreateQrCodeResult.expire_seconds">
            <summary>
            该二维码有效时间，以秒为单位。 最大不超过604800（即7天）。
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.CreateQrCodeResult.url">
            <summary>
            二维码图片解析后的地址，开发者可根据该地址自行生成需要的二维码图片。
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.QrCode">
            <summary>
            二维码接口
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.QrCode.Create(System.String,System.Int32,System.Int32)">
            <summary>
            创建临时/永久二维码（整型参数值）。
            </summary>
            <param name="expireSeconds">该二维码有效时间，以秒为单位。 最大不超过604800（即7天）。当值0时，将生成永久二维码</param>
            <param name="sceneId">场景值ID，临时二维码时为32位非0整型，永久二维码时最大值为100000</param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.QrCode.Create(System.String,System.String,System.String)">
            <summary>
            创建永久二维码（字符串参数值）
            </summary>
            <param name="expireSeconds">该二维码有效时间，以秒为单位。 最大不超过1800。0时为永久二维码</param>
            <param name="sceneId">场景值ID，临时二维码时为32位整型，永久二维码时最大值为1000</param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.QrCode.ShowQrcode(System.String)">
            <summary>
            获取二维码（不需要AccessToken）
            错误情况下（如ticket非法）返回HTTP错误码404。
            </summary>
            <param name="ticket"></param>
            <param name="stream">输出流</param>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.QrCode.ShowQrcode(System.String,System.IO.Stream)">
            <summary>
            获取二维码（不需要AccessToken）
            错误情况下（如ticket非法）返回HTTP错误码404。
            </summary>
            <param name="ticket"></param>
            <param name="stream">输出流</param>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.Groups">
            <summary>
            用户组接口
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.Groups.Create(System.String,System.String)">
            <summary>
            创建分组
            </summary>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.Groups.Get(System.String)">
            <summary>
            发送文本信息
            </summary>
            <param name="accessToken"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.Groups.GetId(System.String,System.String)">
            <summary>
            获取用户分组
            </summary>
            <param name="accessToken"></param>
            <param name="openId"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.Groups.Update(System.String,System.Int32,System.String)">
            <summary>
            创建分组
            </summary>
            <param name="accessToken"></param>
            <param name="id"></param>
            <param name="name">分组名字（30个字符以内）</param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.Groups.MemberUpdate(System.String,System.String,System.Int32)">
            <summary>
            移动用户分组
            </summary>
            <param name="accessToken"></param>
            <param name="openId"></param>
            <param name="toGroupId"></param>
            <returns></returns>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.CreateGroupResult">
            <summary>
            创建分组返回结果
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.GetGroupIdResult">
            <summary>
            获取用户分组ID返回结果
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.GroupsJson_Group.count">
            <summary>
            此属性在CreateGroupResult的Json数据中，创建结果中始终为0
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.OpenIdListJson">
            <summary>
            本批次拿到的订阅者OpenId列表
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.UserGetJson">
            <summary>
            订阅者OpenId列表
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.UserGetJson.total">
            <summary>
            订阅者总数
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.UserGetJson.count">
            <summary>
            本批次拿到的订阅者数量
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.UserGetJson.data">
            <summary>
            本批次拿到的订阅者OpenId列表
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.UserGetJson.next_openid">
            <summary>
            下一批次将从此OpenId开始拿
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.UserInfoJson">
            <summary>
            订阅者资料
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.WeixinLanguage">
            <summary>
            微信语言代码。代码规则同国际通用标准。
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.WeixinLanguage.zh_CN">
            <summary>
            中文简体
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.WeixinLanguage.zh_TW">
            <summary>
            中文繁体
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.WeixinLanguage.en">
            <summary>
            英文
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.UserApi">
            <summary>
            用户接口
            <remarks>接口详见：http://mp.weixin.qq.com/wiki/index.php?title=%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF</remarks>
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.UserApi.Info(System.String,System.String,Myvas.AspNetCore.Weixin.WeixinLanguage)">
            <summary>
            获取微信用户资料
            </summary>
            <param name="accessToken">微信访问凭证</param>
            <param name="openId">微信用户标识。在同一公众号中，一个微信号（用户）每次订阅后得到的OpenId都是唯一的。</param>
            <param name="lang"><see cref="T:Myvas.AspNetCore.Weixin.WeixinLanguage"/></param>
            <returns>微信用户资料</returns>
            <remarks>
            错误时微信会返回错误码等信息，JSON数据包示例如下（该示例为AppID无效错误）:
            <code>
            {"errcode":40013,"errmsg":"invalid appid"}
            </code>
            </remarks>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.UserApi.Get(System.String,System.String)">
            <summary>
            获取一个批次的订阅者的OpenId
            </summary>
            <param name="accessToken"></param>
            <param name="nextOpenId"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.UserApi.GetAllOpenIds(System.String)">
            <summary>
            获取所有订阅者的OpenId
            </summary>
            <param name="accessToken"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.UserApi.GetAllUserInfo(System.String)">
            <summary>
            获取所有订阅者的资料
            </summary>
            <param name="accessToken"></param>
            <returns></returns>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.Ad">
            <summary>
            微信WiFi无线访问点（AP）信息
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.Ad.advertiseId">
            <summary>
            广告编号
            <para>可将AP关联至已设置的广告，即一个广告可以关联到多门店，后续关联的门店不用再审核。</para>
            <para>1.若设置了该字段，则deviceNos的AP关联至该广告，不新增广告；</para>
            <para>2.否则新增广告</para>
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.Ad.logo">
            <summary>
            LOGO url
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.Ad.backgroundImg">
            <summary>
            背景图url
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.Ad.brandName">
            <summary>
            品牌名
            <para>若设置了该字段，则广告上展示brandName</para>
            <para>否则展示门店名称(storeName)</para>
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.Ad.mpAccount">
            <summary>
            微信号（公众号帐号）
            <para>必须。调用时将校验此域。</para>
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.Ad.deviceNos">
            <summary>
            设置广告内容的APlist。其值是一个json串
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.Ad.adTemplet">
            <summary>
            广告模板。
            <para>可选的值有：1-模板1， 2-模板2</para>
            <para>通过调用方法SetAdDetail(...)进行设置</para>
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.Ad.adDetail">
            <summary>
            广告内容信息。其值是一个json串
            <para>其数据格式因adTemplet不同而略有差异。</para>
            <para>通过调用方法SetAdDetail(...)进行设置</para>
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.AdDetail.iconAds">
            <summary>
            图标广告list
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.AdDetail_Template1.text">
            <summary>
            文字广告位标题
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.AdDetail_Template1.textURL">
            <summary>
            文字广告位链接url
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.AdDetail_Template1.#ctor">
            <summary>
            拒绝无参构造，以免用户忘记参数text和textUrl
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.AdDetail_Template1.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="text">附加文本广告。不能为空!</param>
            <param name="textUrl">附加文本广告URL。不能为空！</param>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.ApInfo">
            <summary>
            微信WiFi无线访问点（AP）信息
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ApInfo.bssid">
            <summary>
            为 ap 无线 mac 地址,  即手机终端扫描 ap 获取的 mac 地址
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ApInfo.storeId">
            <summary>
            门店编号（Wi-Fi服务提供商的门店id，非系统门店id）
            </summary>
            <example>例如：123456789</example>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ApInfo.storeName">
            <summary>
            门店名称
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ApInfo.brandName">
            <summary>
            门店经营的品牌名称
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ApInfo.storeProvince">
            <summary>
            门店所属省份，例如：广东省
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ApInfo.storeCity">
            <summary>
            门店所属城市，例如：深圳市
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ApInfo.storeAddress">
            <summary>
            门店详细地址
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ApInfo.storeField">
            <summary>
            门店所属行业
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ApInfo.deviceNo">
            <summary>
            AP设备编码
            </summary>
            <example>例如：10</example>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ApInfo.deviceModel">
            <summary>
            AP设备型号
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ApInfo.deviceMac">
            <summary>
            设备MAC地址
            <para>V0.8接口变更为：格式冒号分隔，并且字母大写，例如84:23:B3:A2:D3:C9</para>
            </summary>
            <example></example>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.ApInfo.SetDeviceMac(System.String)">
            <summary>
            将其他格式MAC地址转换为本协议指定的格式。
            <para>例如：70:3A:D8:1F:38:F8，将转换为70-3a-d8-1f-38-f8</para>
            </summary>
            <param name="macAddress"></param>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ApInfo.ssid">
            <summary>
            AP设备的SSID（无线访问点的名字）
            </summary>
            <example>例如：WIFI1</example>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ApInfo.bandWidth">
            <summary>
            关于带宽的描述，例如：4M 广州电信
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ApInfo.bandOpr">
            <summary>
            AP带宽运营商，例如：中国电信、中国联通
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ApInfo.mpAppId">
            <summary>
            商户运营的微信公众号的appId，设备商需要向商户索取。
            <para>商户可用对应的公众号帐号登录微信管理后台。</para>
            <para>非必须</para>
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ApInfo.storeMail">
            <summary>
            联系方式-Email
            </summary>
            <example>例如：demo@test.com</example>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ApInfo.storePhone">
            <summary>
            联系方式-电话
            </summary>
            <example>例如：400 886 0106</example>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ApInfo.storeContact">
            <summary>
            门店联系人
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ApInfo.storeLongitude">
            <summary>
            门店位置经度，例如：113.886993
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ApInfo.storeLatitude">
            <summary>
            门店位置纬度，例如：22.548933
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.ApOnlineData">
            <summary>
            需要推送给腾讯服务器的AP心跳数据
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.ApOnlineData.deviceNo">
            <summary>
            AP设备编号
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.ApOnlineData.apStatus">
            <summary>
            AP状态。0不在线，1在线
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.ApOnlineData.apOnlines">
            <summary>
            AP连接用户数
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.DeviceStat.deviceNo">
            <summary>
            AP设备编号
            <para>例如：“deviceno1”</para>
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.DeviceStat.phoneUv">
            <summary>
            手机端 302传统认证页面的UV
            <para>例如：10</para>
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.DeviceStat.phonePv">
            <summary>
            手机端 302传统认证页面的PV
            <para>例如：20</para>
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.DeviceStat.phoneLoginPersons">
            <summary>
            手机端传统方式上网的登录人数
            <para>例如：10</para>
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.DeviceStat.phoneLoginTimes">
            <summary>
            手机端传统方式上网的登录次数
            <para>例如：12</para>
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.DeviceStat.pcUv">
            <summary>
            PC端 302传统认证页面的UV
            <para>例如：10</para>
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.DeviceStat.pcPv">
            <summary>
            PC端 302传统认证页面的PV
            <para>例如：20</para>
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.DeviceStat.pcLoginPersons">
            <summary>
            PC端传统方式上网的登录人数
            <para>例如：10</para>
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.DeviceStat.pcLoginTimes">
            <summary>
            PC端传统方式上网的登录次数
            <para>例如：12</para>
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.DeviceStat.failureTimes">
            <summary>
            AP故障持续时间，单位：秒
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.GetAuditStatusResultJson.auditResult">
            <summary>
            审核结果
            </summary>
            <value>
            <para>0-待审核</para>
            <para>1-审核通过。审核通过的会自动上线</para>
            <para>2-审核不通过</para>
            </value>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.GetAuditStatusResultJson.auditComment">
            <summary>
            审核意见
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.GetAuditStatusResultJson.auditTime">
            <summary>
            
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.GetPublishedAdResultJson.adUrl">
            <summary>
            商家主页线上的url
            <para>例如：“http://imgurl”</para>
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.GetQrcodeParam.ssid">
            <summary>
            Wi-Fi连接SSID，必须
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.GetQrcodeParam.qrType">
            <summary>
            是否一次性二维码（多终端上网时生成的临时二维码需要传1），必须
            <example>
            <para>值域：</para>
            <para>qrtype=0 永久二维码</para>
            <para>qrtype=1 一次性二维码</para>
            </example>
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.GetQrcodeParam.lgnId">
            <summary>
            当pc设备获取动态二维码时，需要传入该参数
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.GetQrcodeParam.templateId">
            <summary>
            模板由官方指定，决定整个二维码标签图片的样式
            <example>
            <para>值域：</para>
            <para>0手机扫描二维码模版，不填默认为0</para>
            <para>100多终端扫描模版</para></example>
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.GetQrcodeParam.bgUrl">
            <summary>
            背景图url （图片规格： 944*680px）
            </summary>
            <remarks>手机扫描二维码必须传入bgurl</remarks>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.GetQrcodeParam.storeId">
            <summary>
            ssid对应的门店id
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.GetQrcodeParam.expireTime">
            <summary>
            二维码过期时间，格式是未来一个时间的秒数。
            <para>微信客户端在这个时间之后扫这个二维码，会给二维码失效的提示。</para>
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.GetQrcodeResultJson">
            <summary>
            获取微信WIFI二维码图片的接口返回Json。</summary>
            <example>
            正常情况下，微信会返回下述JSON数据包给公众号：
            <code>
            {"errorCode":0, 
            "errorMessage":"", 
            "qrCodeUrl": "" #二维码图片的url
            }</code>
            错误时微信会返回错误码等信息，JSON数据包示例如下（该示例为AppID无效错误）:
            <code>
            {"errcode":40013,"errmsg":"invalid appid"}</code></example>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.GetQrcodeResultJson.qrCodeUrl">
            <summary>
            微信WIFI二维码图片地址。
            </summary>
            <example></example>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.IconAd.iconTitle">
            <summary>
            图标广告的标题
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.IconAd.iconImg">
            <summary>
            图标广告的图片url
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.IconAd.adURL">
            <summary>
            图标广告的链接
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.IconAd2.iconDesc">
            <summary>
            图标广告的副标题
            <para>模板2参数</para>
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.NoticeWeixinInfoAction">
            <summary>
            Wi-Fi服务提供商通知微信触发验证通知，或Wi-Fi服务提供商通知微信用户登录结果
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.NoticeWeixinInfoAction.push">
            <summary>
            当用户未经扫一扫而手动连接Wi-Fi，或者用户之前设备记忆自动连接Wi-Fi后，发起网络请求不通过，Wi-Fi服务提供商通知微信触发验证通知时调用。
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.NoticeWeixinInfoAction.loginSuccess">
            <summary>
            当用户成功连接登录授权AP网络时，Wi-Fi服务提供商通知微信用户登录结果。
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.NoticeWeixinInfoAction.loginFail">
            <summary>
            当拒绝用户连接登录授权AP网络时，Wi-Fi服务提供商通知微信用户登录结果。
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.SetAdResultJson.requestId">
            <summary>
            该次请求生产的广告id。用于查询审核结果。
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.SetApResultJson.errAplist">
            <summary>
            该次请求生产的广告id。用于查询审核结果。
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ShopApplyForm.shopId">
            <summary>
            需要安装wifi的门店id，在设置AP接口同步回来
            <para>例如：SHOPID1</para>
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ShopApplyForm.shopName">
            <summary>
            门店名称
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ShopApplyForm.contact">
            <summary>
            门店联系人
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ShopApplyForm.contactPhone">
            <summary>
            门店联系人电话
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ShopApplyForm.applyTime">
            <summary>
            申请时间
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.WifiErrorJson">
            <summary>
            微信WiFi相关API返回值（JSON）
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.WifiErrorJson.errorCode">
            <summary>
            微信错误代码
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.WifiErrorJson.errcode">
            <summary>
            由于微信WiFi相关API采用了与微信基础API不一致的命名，因此，我们不得不进行一下转换。
            <para>WTF，麻花疼!</para>
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.WifiErrorJson.errorMessage">
            <summary>
            微信错误描述
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.WifiErrorJson.errmsg">
            <summary>
            由于微信WiFi相关API采用了与微信基础API不一致的命名，因此，我们不得不进行一下转换。
            <para>WTF，麻花疼!</para>
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.WifiApi">
            <summary>
            微信扫一扫WiFi接口(V0.8)
            <para>微信扫一扫Wi-Fi是解决传统商务Wi-Fi连接授权认证的一个方案，代替传统web认证需要用户输入用户名、密码等信息的过程，并在微信界面给予有安全性认证的Wi-Fi服务提供商一个信息展示广告位的入口，以充实其商业化价值。</para>
            <para>微信扫一扫只是解决微信用户连接Wi-Fi通过授权认证的一个手段，Wi-Fi的安全性需要Wi-Fi服务提供商负责。</para>
            </summary>
            <remarks>
            <list type="">接口实现说明
            <item>接口1：已在公共接口(<see cref="T:Myvas.AspNetCore.Weixin.AccessTokenApi"/>)中实现</item>
            <item>接口4：通过邮件方式发送</item>
            <item>接口8：在网站应用程序中实现</item>
            </list>
            </remarks>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WifiApi.GetQrcode(System.String,Myvas.AspNetCore.Weixin.GetQrcodeParam)">
            <summary>
            接口2.获取微信WiFi二维码图片
            </summary>
            <returns>二维码图片url</returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WifiApi.GetWhiteList(System.String)">
            <summary>
            接口3.获取AP白名单信息
            <para>AP需要针对微信的特殊授权请求作放行，必须获取到放行的微信接入ip。</para>
            </summary>
            <returns>白名单</returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WifiApi.SetApInfo(System.String,System.Collections.Generic.List{Myvas.AspNetCore.Weixin.ApInfo})">
            <summary>
            接口5.设置AP信息
            </summary>
            <remarks>Wi-Fi服务提供商安装门店AP完成后，必须把AP信息设置到微信系统中来。</remarks>
            <param name="accessToken"></param>
            <param name="apInfos"></param>
            <returns>true:设置成功。</returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WifiApi.SetAdInfo(System.String,Myvas.AspNetCore.Weixin.Ad)">
            <summary>
            接口6.设定广告内容
            <para>Wi-Fi服务提供商安装门店AP完成后，必须把AP信息设置到微信系统中来。</para>
            <para>Wi-Fi服务提供商为门店AP设置广告信息。设置成功后，并不是马上生效。需要微信运营审核通过再生效。一个门店的若干AP设置同一个广告的情况, 通过deviceNos传多个进来。</para>
            </summary>
            <param name="accessToken"></param>
            <param name="ad">广告内容。
            <para>注意：有两个模板，这两个模板的数据格式略有差异。</para>
            <para>建议：不要直接设置adTemplet和adDetail属性值。</para>
            <para>建议：调用Ad.SetAdDetail(...)来设置广告内容的细节！</para></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WifiApi.NoticeWeixinInfo(System.String,System.String,Myvas.AspNetCore.Weixin.NoticeWeixinInfoAction,System.String)">
            <summary>
            接口7.通知微信触发认证
            </summary>
            <remarks>当用户未经扫一扫而手动连接Wi-Fi，或者用户之前设备记忆自动连接Wi-Fi后，发起网络请求不通过，Wi-Fi服务提供商通知微信触发验证通知时调用。
            <para>当用户成功连接登录授权AP网络时，Wi-Fi服务提供商通知微信用户登录结果。</para></remarks>
            <param name="accessToken">调用接口凭证</param>
            <param name="action">通知触发的行为，目前有push，loginSuccess，loginFail。详见<see cref="T:Myvas.AspNetCore.Weixin.NoticeWeixinInfoAction"/></param>
            <param name="mac">已经联网触发网络请求的设备手机mac地址</param>
            <param name="deviceMac">已经联网触发网络请求的AP设备mac地址
            <para>(action为loginSuccess，loginFail时必须输入该该参数)</para></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WifiApi.GetAuditStatus(System.String,System.String)">
            <summary>
            接口9.拉取审核结果
            <para>当Wi-Fi服务提供商调用(1)设置广告，或者(2)生成手机二维码接口请求，微信运营人员会对内容进行审核。</para>
            <para>Wi-Fi服务提供商调用该接口获取审核状态。</para>
            </summary>
            <param name="accessToken">调用接口凭证</param>
            <param name="requestId">审核结果对应的请求id，该请求id设置AD接口会返回</param>
            <param name="type">审核结果类型，预留</param>
            <returns>审核结果</returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WifiApi.GetApplyShop(System.String,System.DateTime)">
            <summary>
            接口10.获取商家WiFi申请信息
            <para>微信侧的商户选择设备商，并提交申请开通扫一扫WIFI功能后，设备商可以通过该接口拉取申请的商户信息，之后线下为商户安装AP设备，并通过设置AP接口同步过来。</para>
            </summary>
            <param name="accessToken">调用接口凭证</param>
            <param name="applyDate">商户申请的日期，格式20140716</param>
            <returns>商家WiFi申请信息</returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WifiApi.PushStatData(System.String,System.DateTime,System.Collections.Generic.List{Myvas.AspNetCore.Weixin.DeviceStat})">
            <summary>
            接口11.推送AP统计数据到微信
            <para>为保证用户体验，微信需要对服务商的连接成功率进行监控，需要AP相关的统计数据支持。WI-FI服务商每天推送前一天的AP统计数据给到微信。</para>
            </summary>
            <param name="accessToken"></param>
            <param name="statDate">Ap的统计数据日期，格式是20140903</param>
            <param name="statList">统计数据</param>
            <returns>正常情况下，微信会返回下述JSON数据包给开发者：
            <para><code>{“errorCode”:0, ”errorMessage”:”” }</code></para>
            错误时微信会返回错误码和错误的设备编码等信息， JSON数据包示例如下:
            <para><code>{"errorCode":30013,"errorMessage":"参数非法"}</code></para>
            </returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WifiApi.GetPublishedAd(System.String,System.String)">
            <summary>
            接口12. 获取线上的AD
            <para>Wi-Fi运营商可以根据需要通过该接口读取商家主页线上的url。</para>
            </summary>
            <param name="accessToken">调用接口凭证</param>
            <param name="deviceNo">需要查询的ap设备号</param>
            <returns>正常情况下，微信会返回下述JSON数据包给开发者：
            <para><code>{“errorCode”:0,”errorMessage”:””, “adUrl” : “http://imgurl” }</code></para>
            错误时微信会返回错误码等信息，JSON数据包示例如下（该示例为AppID无效错误）:
            <para><code>{"errorCode":40013,"errorMessage":"invalid appid"}</code></para></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WifiApi.SetVendorConfig(System.String,System.String,System.String)">
            <summary>
            接口13.设置WiFi服务商配置信息
            <para>当Wi-Fi服务提供商完成回调授权接口的实现后，需要将该接口的url和接口凭证设置到微信系统中来。</para>
            </summary>
            <param name="accessToken"></param>
            <param name="callbackUrl">回调授权的URL
            <para>例如：“http://xxxx”</para></param>
            <param name="callbackToken">调用callbackUrl的凭证，即接口8(回调授权请求)中生成signature的token</param>
            <returns>正常情况下，微信会返回下述JSON数据包给开发者：
            <para><code>{"errorCode":0, "errorMessage":"" }</code></para>
            错误时微信会返回错误码等信息，JSON数据包示例如下（该示例为AppID无效错误）:
            <para><code>{"errorCode":40013,"errorMessage":"invalid appid"}</code></para>
            </returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WifiApi.PushApOnline(System.String,System.Collections.Generic.List{Myvas.AspNetCore.Weixin.ApOnlineData})">
            <summary>
            接口14. 推送AP心跳数据到微信
            <para>为更好的监控AP实时在线运营情况，以便给用户更好稳定的上网体验。微信需要AP心跳数据的支持。</para>
            <para>请WI-FI服务商每5分钟推送AP当前在线状态以及连接人数给到微信。</para>
            </summary>
            <param name="accessToken"></param>
            <returns>正常情况下，微信会返回下述JSON数据包给开发者：
            <para><code>{"errorCode":0, "errorMessage":"" }</code></para>
            错误时微信会返回错误码等信息，JSON数据包示例如下（该示例为AppID无效错误）:
            <para><code>{"errorCode":40013,"errorMessage":"invalid appid"}</code></para>
            </returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WifiApi.BindAd(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            接口15. 绑定已生成的AD到AP
            <para>为方便开发者将已经设置过的广告应用到其他AP上，该接口只需提供之前设置过的广告ID以及希望应用于的AP的设备编号列表。</para>
            <para>接口6设置AD信息会返回设置好的广告ID：requestId，如果想将该广告应用到其他AP上，则可以传该ID。</para>
            <para>如果该广告审核不通过，则返回失败。 如果该广告审核不通过，则返回失败。</para>
            </summary>
            <param name="accessToken">调用接口凭证</param>
            <param name="adId">广告ID，即接口6设置AD信息成功后返回的requestId</param>
            <param name="deviceNos">AP设备编号列表，json数组串。
            <para>例如：</para>
            <para><code>["deviceno1","deviceno2"]</code></para></param>
            <returns>正常情况下，微信会返回下述JSON数据包给开发者：
            <para><code>{"errorCode":0, "errorMessage":"" }</code></para>
            错误时微信会返回错误码等信息，JSON数据包示例如下（该示例为AppID无效错误）:
            <para><code>{"errorCode":40013,"errorMessage":"invalid appid"}</code></para>
            </returns>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.BaseApi">
            <summary>
            微信基础功能接口
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.BaseApi.GetUserInfo(System.String,System.String)">
            <summary>
            用户信息接口
            </summary>
            <param name="accessToken"></param>
            <param name="openID"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.BaseApi.UploadMediaFile(System.String,Myvas.AspNetCore.Weixin.MediaType,System.String)">
             <summary>
             媒体文件上传接口
            注意事项
            1.上传的媒体文件限制：
            图片（image) : 1MB，支持JPG格式
            语音（voice）：1MB，播放长度不超过60s，支持MP4格式
            视频（video）：10MB，支持MP4格式
            缩略图（thumb)：64KB，支持JPG格式
            2.媒体文件在后台保存时间为3天，即3天后media_id失效
             </summary>
             <param name="accessToken"></param>
             <param name="UploadMediaType">上传文件类型</param>
             <param name="fileName">上传文件完整路径+文件名</param>
             <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.MessageSend.GetJson``1(System.String)">
            <summary>
            简单地，通过GET请求方式，仅仅是传入一个URL(带参)，便可获取一个JSON对象，并将其反向序列化，最终得到一个简单数据实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.MessageSend.GetJson``1(System.String,System.Object)">
            <summary>
            通过POST请求方式，传入一个表单(object类型)，获取一个JSON对象，并将其反向序列化，最终得到一个简单数据实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="url"></param>
            <param name="objRequest"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.RequestMessageFactory.GetRequestEntity(System.Xml.Linq.XDocument)">
            <summary>
            获取XDocument转换后的IRequestMessageBase实例。
            如果MsgType不存在，抛出UnknownRequestMsgTypeException异常
            </summary>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.RequestMessageFactory.GetRequestEntity(System.String)">
            <summary>
            获取XDocument转换后的IRequestMessageBase实例。
            如果MsgType不存在，抛出UnknownRequestMsgTypeException异常
            </summary>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.RequestMessageFactory.GetRequestEntity(System.IO.Stream)">
            <summary>
            获取XDocument转换后的IRequestMessageBase实例。
            如果MsgType不存在，抛出UnknownRequestMsgTypeException异常
            </summary>
            <param name="stream">如Request.InputStream</param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.ResponseMessageFactory.GetResponseEntity(System.Xml.Linq.XDocument)">
            <summary>
            获取XDocument转换后的IResponseMessageBase实例（通常在反向读取日志的时候用到）。
            如果MsgType不存在，抛出UnknownRequestMsgTypeException异常
            </summary>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.ResponseMessageFactory.GetResponseEntity(System.String)">
            <summary>
            获取XDocument转换后的IRequestMessageBase实例。
            如果MsgType不存在，抛出UnknownRequestMsgTypeException异常
            </summary>
            <returns></returns>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.IMessageContext.UserName">
            <summary>
            用户名（OpenID）
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.IMessageContext.LastActiveTime">
            <summary>
            最后一次活动时间（用户主动发送Resquest请求的时间）
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.IMessageContext.RequestMessages">
            <summary>
            接收消息记录
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.IMessageContext.ResponseMessages">
            <summary>
            响应消息记录
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.IMessageContext.MaxRecordCount">
            <summary>
            最大储存容量（分别针对RequestMessages和ResponseMessages）
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.IMessageContext.StorageData">
            <summary>
            临时储存数据，如用户状态等，出于保持.net 3.5版本，这里暂不使用dynamic
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.IMessageContext.ExpireMinutes">
            <summary>
            用于覆盖WeixinContext所设置的默认过期时间
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.MessageContext">
            <summary>
            微信消息上下文（单个用户）
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.MessageContext.OnMessageContextRemoved(Myvas.AspNetCore.Weixin.WeixinContextEventArgs)">
            <summary>
            执行上下文被移除的事件
            注意：此事件不是实时触发的，而是等过期后任意一个人发过来的下一条消息执行之前触发。
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.MessageContext.#ctor">
            <summary>
            maxRecordCount如果小于等于0，则不限制
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.MessageQueueCollection`1">
            <summary>
            微信消息列队（针对单个账号的往来消息）
            </summary>
            <typeparam name="TM"></typeparam>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.WeixinContextGlobal.UseWeixinContext">
            <summary>
            是否开启上下文记录
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.WeixinContext`1">
            <summary>
            微信消息上下文（全局）
            默认过期时间：90分钟
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.WeixinContext`1.MessageCollection">
            <summary>
            所有MessageContext集合，不要直接操作此对象
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.WeixinContext`1.MessageQueue">
            <summary>
            MessageContext列队（LastActiveTime升序排列）,不要直接操作此对象
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.WeixinContext`1.ExpireMinutes">
            <summary>
            每一个MessageContext过期时间
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WeixinContext`1.Restore">
            <summary>
            重置所有上下文参数，所有记录将被清空
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WeixinContext`1.GetMessageContext(System.String)">
            <summary>
            获取MessageContext，如果不存在，返回null
            这个方法的更重要意义在于操作TM队列，及时移除过期信息，并将最新活动的对象移到尾部
            </summary>
            <param name="userName">用户名（OpenId）</param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WeixinContext`1.GetMessageContext(System.String,System.Boolean)">
            <summary>
            获取MessageContext
            </summary>
            <param name="userName">用户名（OpenId）</param>
            <param name="createIfNotExists">True：如果用户不存在，则创建一个实例，并返回这个最新的实例
            False：用户存在，则返回null</param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WeixinContext`1.GetMessageContext(Myvas.AspNetCore.Weixin.IRequestMessageBase)">
            <summary>
            获取MessageContext，如果不存在，使用requestMessage信息初始化一个，并返回原始实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WeixinContext`1.GetMessageContext(Myvas.AspNetCore.Weixin.IResponseMessageBase)">
            <summary>
            获取MessageContext，如果不存在，使用requestMessage信息初始化一个，并返回原始实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WeixinContext`1.InsertMessage(Myvas.AspNetCore.Weixin.IRequestMessageBase)">
            <summary>
            记录请求信息
            </summary>
            <param name="requestMessage">请求信息</param>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WeixinContext`1.InsertMessage(Myvas.AspNetCore.Weixin.IResponseMessageBase)">
            <summary>
            记录响应信息
            </summary>
            <param name="responseMessage">响应信息</param>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WeixinContext`1.GetLastRequestMessage(System.String)">
            <summary>
            获取最新一条请求数据，如果不存在，则返回Null
            </summary>
            <param name="userName">用户名（OpenId）</param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WeixinContext`1.GetLastResponseMessage(System.String)">
            <summary>
            获取最新一条响应数据，如果不存在，则返回Null
            </summary>
            <param name="userName">用户名（OpenId）</param>
            <returns></returns>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.WeixinContextEventArgs">
            <summary>
            对话上下文被删除时触发事件的事件数据
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.WeixinContextEventArgs.OpenId">
            <summary>
            该用户的OpenId
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.WeixinContextEventArgs.LastActiveTime">
            <summary>
            最后一次响应时间
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.WeixinContextEventArgs.MessageContext">
            <summary>
            上下文对象
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.WeixinMessageCollection`1.MaxRecordCount">
            <summary>
            最大记录条数（保留尾部），如果小于等于0则不限制
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.BaiduMarkerSize">
            <summary>
            标记大小
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.BaiduMarkerSize.Default">
            <summary>
            默认：中
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.BaiduMarkerSize.s">
            <summary>
            小
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.BaiduMarkerSize.m">
            <summary>
            中
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.BaiduMarkerSize.l">
            <summary>
            大
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.BaiduMarkers">
            <summary>
            百度地图生成器
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.BaiduMarkers.Size">
            <summary>
            （可选）有大中小三个值，分别为s、m、l。
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.BaiduMarkers.Color">
            <summary>
            （可选）Color = [0x000000, 0xffffff]或使用css定义的颜色表。
            black 0x000000 
            silver 0xC0C0C0 
            gray 0x808080 
            white 0xFFFFFF 
            maroon 0x800000
            red 0xFF0000 
            purple 0x800080 
            fuchsia 0xFF00FF 
            green 0x008000
            lime 0x00FF00 
            olive 0x808000 
            yellow 0xFFFF00 
            navy 0x000080 
            blue 0x0000FF
            teal 0x008080 
            aqua 0x00FFFF
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.BaiduMarkers.Label">
            <summary>
            （可选）指定集合 {A-Z, 0-9} 中的一个大写字母数字字符。不指定时显示A。
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.BaiduMarkers.url">
            <summary>
            自定义icon的地址，图片格式目前仅支持png32的。设置自定义图标标注时，忽略Size、Color、Label三个属性，只设置该属性且该属性前增加-1，如markerStyles=-1, http://api.map.baidu.com/images/marker_red.png，图标大小需小于5k，超过该值会导致加载不上图标的情况发生。
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.BaiduMarkers.Longitude">
            <summary>
            经度longitude（对应GoogleMap的X）
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.BaiduMarkers.Latitude">
            <summary>
            纬度latitude（对应GoogleMap的Y）
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.GoogleMapMarkerSize">
            <summary>
            标记大小
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.GoogleMapMarkers.Size">
            <summary>
            （可选）指定集合 {tiny, mid, small} 中的标记大小。如果未设置 size 参数，标记将以其默认（常规）大小显示。
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.GoogleMapMarkers.Color">
            <summary>
            （可选）指定 24 位颜色（例如 color=0xFFFFCC）或集合 {black, brown, green, purple, yellow, blue, gray, orange, red, white} 中预定义的一种颜色。
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.GoogleMapMarkers.Label">
            <summary>
            （可选）指定集合 {A-Z, 0-9} 中的一个大写字母数字字符。
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.GoogleMapMarkers.Latitude">
            <summary>
            经度longitude
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.GoogleMapMarkers.Longitude">
            <summary>
            纬度latitude
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.UploadMediaResult">
            <summary>
            上传媒体文件返回结果
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.UserInfoResult.subscribe">
            <summary>
            用户是否订阅该公众号标识，值为0时，拉取不到其余信息
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.UserInfoResult.openid">
            <summary>
            普通用户的标识，对当前公众号唯一
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.UserInfoResult.nickname">
            <summary>
            普通用户的昵称
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.UserInfoResult.headimgurl">
            <summary>
            普通用户的头像链接
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.UserInfoResult.language">
            <summary>
            普通用户的语言，简体中文为zh_CN
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.MessageBase">
            <summary>
            所有Request和Response消息的基类
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.Article">
            <summary>
            微信图文混排
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.Article.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.Article.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.Article.PicUrl">
            <summary>
            图片地址。支持JPG、PNG格式，较好的效果为大图360*200，小图200*200
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.Article.Url">
            <summary>
            跳转链接地址
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.Image">
            <summary>
            图片资源
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.Image.MediaId">
            <summary>
            资源号
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.Voice">
            <summary>
            声音资源
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.Voice.MediaId">
            <summary>
            资源号
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.Video">
            <summary>
            视频资源
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.Video.MediaId">
            <summary>
            资源号
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.Video.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.Video.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.Music">
            <summary>
            音乐资源
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.Music.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.Music.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.Music.MusicUrl">
            <summary>
            音乐地址
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.Music.HQMusicUrl">
            <summary>
            音乐地址（高质量版）
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.IRequestMessageEventBase.Event">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.IRequestMessageEventBase.EventKey">
            <summary>
            事件KEY值，与自定义菜单接口中KEY值对应
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.RequestMessageEventBase.Event">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.RequestMessageEventBase.EventKey">
            <summary>
            事件KEY值，与自定义菜单接口中KEY值对应，如果是View，则是跳转到的URL地址
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.RequestMessageEventView">
            <summary>
            事件之URL跳转视图（View）
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.RequestMessageEventView.Event">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.RequestMessageEventClick">
            <summary>
            事件之取消订阅
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.RequestMessageEventClick.Event">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.RequestMessageEventEnter.Event">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.RequestMessageEventSubscribe">
            <summary>
            事件之订阅
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.RequestMessageEventSubscribe.Event">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.RequestMessageEventSubscribe.Ticket">
            <summary>
            带场景码时，作为换二维码图的票据
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.RequestMessageEventUnsubscribe">
            <summary>
            事件之取消订阅
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.RequestMessageEventUnsubscribe.Event">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.RequestMessageEventScan">
            <summary>
            事件之二维码扫描（关注微信）
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.RequestMessageEventScan.Event">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.RequestMessageEventLocation">
            <summary>
            获取用户地理位置（高级接口下才能用）
            获取用户地理位置的方式有两种，一种是仅在进入会话时上报一次，一种是进入会话后每隔5秒上报一次。公众号可以在公众平台网站中设置。
            用户同意上报地理位置后，每次进入公众号会话时，都会在进入时上报地理位置，或在进入会话后每5秒上报一次地理位置，上报地理位置以推送XML数据包到开发者填写的URL来实现。
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.RequestMessageEventLocation.Event">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.RequestMessageEventLocation.Latitude">
            <summary>
            地理位置维度，事件类型为LOCATION的时存在
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.RequestMessageEventLocation.Longitude">
            <summary>
            地理位置经度，事件类型为LOCATION的时存在
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.RequestMessageEventLocation.Precision">
            <summary>
            地理位置精度，事件类型为LOCATION的时存在
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.RequestMessageLocation.Latitude">
            <summary>
            地理位置纬度Location_X
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.RequestMessageLocation.Longitude">
            <summary>
            地理位置经度Location_Y
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.RequestMessageVoice.Format">
            <summary>
            语音格式：amr
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.RequestMessageVoice.Recognition">
            <summary>
            语音识别结果，UTF8编码
            开通语音识别功能，用户每次发送语音给公众号时，微信会在推送的语音消息XML数据包中，增加一个Recongnition字段。
            注：由于客户端缓存，开发者开启或者关闭语音识别功能，对新关注者立刻生效，对已关注用户需要24小时生效。开发者可以重新关注此帐号进行测试。
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.ResponseMessageBase">
            <summary>
            响应回复消息
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.ResponseMessageBase.CreateFromRequestMessage(Myvas.AspNetCore.Weixin.IRequestMessageBase,Myvas.AspNetCore.Weixin.ResponseMsgType)">
            <summary>
            获取响应类型实例，并初始化
            </summary>
            <param name="requestMessage">请求</param>
            <param name="msgType">响应类型</param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.ResponseMessageBase.CreateFromRequestMessage``1(Myvas.AspNetCore.Weixin.IRequestMessageBase)">
            <summary>
            获取响应类型实例，并初始化
            </summary>
            <typeparam name="T">需要返回的类型</typeparam>
            <param name="requestMessage">请求数据</param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.ResponseMessageBase.CreateFromResponseXml(System.String)">
            <summary>
            从返回结果XML转换成IResponseMessageBase实体类
            </summary>
            <param name="xml">返回给服务器的Response Xml</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Myvas.AspNetCore.Weixin.ResponseMessageTransferCustomerService" -->
        <member name="P:Myvas.AspNetCore.Weixin.ResponseMessageText.Content">
            <summary>
            文本内容
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ResponseMessageNews.Articles">
            <summary>
            文章列表，微信客户端只能输出前10条（可能未来数字会有变化，出于视觉效果考虑，建议控制在8条以内）
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.ResponseMessageVoice">
            <summary>
            需要预先上传多媒体文件到微信服务器，只支持认证服务号。
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.ResponseMessageVideo">
            <summary>
            需要预先上传多媒体文件到微信服务器，只支持认证服务号。
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.BaseWeixinContext">
            <summary>
            Base class for other Weixin contexts.
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.BaseWeixinContext.#ctor(Microsoft.AspNetCore.Http.HttpContext,Myvas.AspNetCore.Weixin.WeixinWelcomePageOptions)">
            <summary>
            Initializes a <see cref="T:Myvas.AspNetCore.Weixin.BaseWeixinContext"/>
            </summary>
            <param name="context">The HTTP environment</param>
            <param name="options">The options for <see cref="T:Myvas.AspNetCore.Weixin.WeixinWelcomePageMiddleware"/></param>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.WeixinReceivedContext`1">
            <summary>
            Contains information about the login session as well as the user <see cref="T:System.Security.Claims.ClaimsIdentity"/>.
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WeixinReceivedContext`1.#ctor(Myvas.AspNetCore.Weixin.WeixinMessageHandler,`0,System.Boolean)">
            <summary>
            Initializes a <see cref="!:WeixinMessageEventReceivedContext"/>
            </summary>
            <param name="context">The HTTP environment</param>
            <param name="options">The options for Weixin</param>
            <param name="sender">The sender respective for <see cref="!:MessageHandler&lt;TC&gt;&gt;"/></param>
            <param name="args"><see cref="!:TEventArgs"/></param>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.WeixinReceivedContext`1.Sender">
            <summary>
            Gets the sender
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.WeixinReceivedContext`1.Args">
            <summary>
            Gets the event args
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.WeixinReceivedContext`1.NeedEncrypt">
            <summary>
            Gets whether WeixinMessageEncryptor is must.
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.EventReceivedEventArgs">
            <summary>
            收到事件（非普通消息）
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.EventReceivedEventArgs.EventValue">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.ClickMenuEventReceivedEventArgs">
            <summary>
            收到点击菜单拉取消息事件
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ClickMenuEventReceivedEventArgs.EventKey">
            <summary>
            事件KEY值，与自定义菜单接口中KEY值对应。另有别名：<see cref="P:Myvas.AspNetCore.Weixin.ClickMenuEventReceivedEventArgs.MenuItemKey"/>
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.EnterEventReceivedEventArgs">
            <summary>
            进入微信号。
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.LocationEventReceivedEventArgs">
            <summary>
            上报地理位置事件
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.LocationEventReceivedEventArgs.Latitude">
            <summary>
            纬度
            <example>23.134521</example>
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.LocationEventReceivedEventArgs.Longitude">
            <summary>
            经度
            <example>113.358803</example>
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.LocationEventReceivedEventArgs.Precision">
            <summary>
            地理位置精度
            <example>40.000000</example>
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.QrscanEventReceivedEventArgs">
            <summary>
            用户扫描带参数（场景值）二维码（扫描前已关注）
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.QrscanEventReceivedEventArgs.EventKey">
            <summary>
            事件KEY值，是一个32位无符号整数，即创建二维码时的二维码scene_id（整数或字符串）
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.QrscanEventReceivedEventArgs.Scene">
            <summary>
            场景ID
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.QrscanEventReceivedEventArgs.Ticket">
            <summary>
            二维码的ticket，可用来换取二维码图片
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.SubscribeEventReceivedEventArgs">
            <summary>
            订阅事件。或，用户扫描带参数（场景值）二维码（扫描前未关注）。
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.SubscribeEventReceivedEventArgs.EventKey">
            <summary>
            事件KEY值，qrscene_为前缀，后面为二维码的参数值
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.SubscribeEventReceivedEventArgs.Ticket">
            <summary>
            二维码的ticket，可用来换取二维码图片
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.UnsubscribeEventReceivedEventArgs">
            <summary>
            退订事件
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.ViewMenuEventReceivedEventArgs">
            <summary>
            收到点击菜单跳转链接事件
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ViewMenuEventReceivedEventArgs.EventKey">
            <summary>
            事件KEY值，与自定义菜单接口中KEY值对应。另有别名：<see cref="!:MenuItemKey"/>
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.MessageReceivedEventArgs">
            <summary>
            收到普通消息（除事件外的消息）
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.ImageMessageReceivedEventArgs">
            <summary>
            收到图片消息
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.LinkMessageReceivedEventArgs">
            <summary>
            收到链接消息
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.LocationMessageReceivedEventArgs">
            <summary>
            收到地理位置消息
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.LocationMessageReceivedEventArgs.Latitude">
            <summary>
            Location_X, 纬度
            <example>23.134521</example>
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.LocationMessageReceivedEventArgs.Longitude">
            <summary>
            Location_Y, 经度
            <example>113.358803</example>
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.LocationMessageReceivedEventArgs.Scale">
            <summary>
            缩放大小
            <example>20</example>
            <remarks>注意：与Google Maps不一致</remarks>
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.LocationMessageReceivedEventArgs.Label">
            <summary>
            地址标注
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.ShortVideoMessageReceivedEventArgs">
            <summary>
            小视频消息
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ShortVideoMessageReceivedEventArgs.MediaId">
            <summary>
            视频消息媒体id，可以调用多媒体文件下载接口拉取数据。
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ShortVideoMessageReceivedEventArgs.ThumbMediaId">
            <summary>
            视频消息缩略图的媒体id，可以调用多媒体文件下载接口拉取数据。
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.TextMessageReceivedEventArgs">
            <summary>
            收到文本消息
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.VideoMessageReceivedEventArgs">
            <summary>
            视频消息
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.VideoMessageReceivedEventArgs.MediaId">
            <summary>
            视频消息
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.VoiceMessageReceivedEventArgs">
            <summary>
            收到语音消息
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.VoiceMessageReceivedEventArgs.Recognition">
            <summary>
            语音识别结果
            </summary>
            <remarks>开通语音识别后，用户每次发送语音给公众号时，微信会在推送的语音消息XML数据包中，增加一个Recongnition字段（注：由于客户端缓存，开发者开启或者关闭语音识别功能，对新关注者立刻生效，对已关注用户需要24小时生效。开发者可以重新关注此帐号进行测试）</remarks>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.ReceivedEventArgs">
            <summary>
            收到消息或事件
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ReceivedEventArgs.ToUserName">
            <summary>
            开发者微信号
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ReceivedEventArgs.FromUserName">
            <summary>
            发送方帐号（一个OpenID）
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ReceivedEventArgs.CreateTimeStr">
            <summary>
            消息创建时间
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.ReceivedEventArgs.MsgTypeStr">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.ReceivedEventType">
            <summary>
            当MsgType字段值为<see cref="F:Myvas.AspNetCore.Weixin.ReceivedMsgType.event"/>时，Event字段值即为事件类型(<see cref="T:Myvas.AspNetCore.Weixin.ReceivedEventType"/>)
            </summary>
            <remarks>存储时建议使用.ToString()，而非数值。解析时应忽略大小写。</remarks>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.ReceivedEventType.subscribe">
            <summary>
            1.1 订阅
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.ReceivedEventType.unsubscribe">
            <summary>
            1.2 取消订阅
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.ReceivedEventType.SCAN">
            <summary>
            300 二维码扫描
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.ReceivedEventType.LOCATION">
            <summary>
            400 上报地理位置事件，注意区别于“地理位置上行消息”
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.ReceivedEventType.CLICK">
            <summary>
            500 自定义菜单事件：拉取消息
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.ReceivedEventType.VIEW">
            <summary>
            600 自定义菜单事件：跳转链接
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.ReceivedMsgType">
             <summary>
             接收消息类型
             </summary>
            <remarks>存储时建议使用.ToString()存储字符串，不要存储数值。解析时应忽略大小写。</remarks>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.ReceivedMsgType.text">
            <summary>
            100 文本消息
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.ReceivedMsgType.image">
            <summary>
            200 图片消息
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.ReceivedMsgType.voice">
            <summary>
            300 语音消息
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.ReceivedMsgType.video">
            <summary>
            400 视频消息
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.ReceivedMsgType.shortvideo">
            <summary>
            440 小视频消息
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.ReceivedMsgType.location">
            <summary>
            500 地理位置消息
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.ReceivedMsgType.link">
            <summary>
            6 链接消息
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.ReceivedMsgType.event">
            <summary>
            接收事件推送
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.WeixinMessageEvents">
            <summary>
            "Official account services unavailable. Try again later." 
            will be response while firing an event that returns "false".
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.WeixinUnknownRequestMsgTypeException">
            <summary>
            未知请求类型。
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.ResponseMsgType">
            <summary>
            回复/发送消息类型
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.ResponseMsgType.text">
            <summary>
            1 回复/发送文本消息
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.ResponseMsgType.news">
            <summary>
            6 回复/发送图文消息
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.ResponseMsgType.music">
            <summary>
            5 回复/发送音乐消息
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.ResponseMsgType.image">
            <summary>
            2 回复/发送图片消息
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.ResponseMsgType.voice">
            <summary>
            3 回复/发送语音消息
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.ResponseMsgType.video">
            <summary>
            4 回复/发送视频消息
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.ResponseMsgType.transfer_customer_service">
            <summary>
            将消息转发到客服
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.ButtonType">
            <summary>
            菜单按钮类型
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.ButtonType.click">
            <summary>
            自定义菜单事件：拉取消息
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.ButtonType.view">
            <summary>
            自定义菜单事件：跳转链接
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.TaskCache.CompletedTask">
            <summary>
            A <see cref="T:System.Threading.Tasks.Task"/> that's already completed successfully.
            </summary>
            <remarks>
            We're caching this in a static readonly field to make it more inlinable and avoid the volatile lookup done
            by <c>Task.CompletedTask</c>.
            </remarks>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.WeixinBuilder">
            <summary>
            Helper functions for configuring Weixin services.
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.Config">
            <summary>
            全局设置
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.Config.TIME_OUT">
            <summary>
            请求超时设置（以毫秒为单位），默认为10秒
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.Constants.WeixinApiServers">
            <summary>
            公众平台接口域名
            </summary>
            <remarks>
            开发者可以根据自己的服务器部署情况，选择最佳的接入点（延时更低，稳定性更高）。除此之外，可以将其他接入点用作容灾用途，当网络链路发生故障时，可以考虑选择备用接入点来接入。
            </remarks>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.Constants.WeixinApiServers.Default">
            <summary>
            通用域名(api.weixin.qq.com)，使用该域名将访问官方指定就近的接入点；
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.Constants.WeixinApiServers.Backup">
            <summary>
            通用异地容灾域名(api2.weixin.qq.com)，当上述域名不可访问时可改访问此域名；
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.Constants.WeixinApiServers.Shanghai">
            <summary>
            上海域名(sh.api.weixin.qq.com)，使用该域名将访问上海的接入点；
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.Constants.WeixinApiServers.Shenzhen">
            <summary>
            深圳域名(sz.api.weixin.qq.com)，使用该域名将访问深圳的接入点；
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.Constants.WeixinApiServers.Hongkong">
            <summary>
            香港域名(hk.api.weixin.qq.com)，使用该域名将访问香港的接入点。
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.Constants.WeixinApiServers.Servers">
            <summary>
            公众平台接口域名列表
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.WeixinException">
            <summary>
            微信框架异常类
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.WeixinException.ErrorJson">
            <summary>
            微信错误返回值
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Myvas.AspNetCore.Weixin.DictionaryExtensions.GetQueryString(System.Collections.Generic.Dictionary{System.String,System.String})" -->
        <member name="M:Myvas.AspNetCore.Weixin.IRequestMessageEventBaseExtensions.ConvertToRequestMessageText(Myvas.AspNetCore.Weixin.IRequestMessageEventBase)">
            <summary>
            将RequestMessageEventBase转换成RequestMessageText类型，其中Content = requestMessage.EventKey
            </summary>
            <param name="requestMessageEvent"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.Extensions.FillEntityWithXml``1(``0,System.Xml.Linq.XDocument)">
            <summary>
            根据XML信息填充实实体
            </summary>
            <typeparam name="T">MessageBase为基类的类型，Response和Request都可以</typeparam>
            <param name="entity">实体</param>
            <param name="doc">XML</param>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.Extensions.ConvertEntityToXml``1(``0)">
            <summary>
            将实体转为XML
            </summary>
            <typeparam name="T">RequestMessage或ResponseMessage</typeparam>
            <param name="entity">实体</param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.Extensions.ConvertEntityToXmlString``1(``0)">
            <summary>
            将实体转为XML字符串
            </summary>
            <typeparam name="T">RequestMessage或ResponseMessage</typeparam>
            <param name="entity">实体</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Myvas.AspNetCore.Weixin.Extensions.CreateResponseMessage``1(Myvas.AspNetCore.Weixin.IRequestMessageBase)" -->
        <member name="M:Myvas.AspNetCore.Weixin.Extensions.CreateResponseMessage(System.String)">
            <summary>
            ResponseMessageBase.CreateFromResponseXml(xml)的扩展方法
            </summary>
            <param name="xml">返回给服务器的Response Xml</param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.NameValueCollectionExtensions.GetValue``1(System.Collections.Specialized.NameValueCollection,System.String,``0)">
            <summary>
            获取<see cref="T:System.Collections.Specialized.NameValueCollection"/>的值。
            <para>若指定键不存在，则返回指定值。</para>
            </summary>
            <example>
            <code>
            Request.QueryString.GetValue&lt;int?>("id") ?? 10;
            Request.QueryString.GetValue&lt;int?>("id", 10);
            Request.QueryString.GetValue&lt;int>("id", 10);
            ConfigurationManager.AppSettings.GetValue&lt;string>("Token","Demo");
            </code></example>
            <typeparam name="T">参数值类型</typeparam>
            <param name="collection"></param>
            <param name="key">参数名</param>
            <returns>参数值。强类型。</returns>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.StringExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.StringExtensions.FormatWith(System.String,System.IFormatProvider,System.Object)">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="provider"></param>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.StringExtensions.UrlEncode(System.String)">
            <summary>
            封装System.Web.HttpUtility.UrlEncode
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.StringExtensions.UrlDecode(System.String)">
            <summary>
            封装System.Web.HttpUtility.UrlDecode
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WebHeaderCollectionExtensions.GetFileExtensionName(System.Net.Http.Headers.HttpHeaders)">
            <summary>
            从Web Headers中取出文件扩展名
            </summary>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WebHeaderCollectionExtensions.GetFileNameFromContentDisposition(System.String)">
            <summary>
            从Content-Disposition中取出文件名（filename）
            </summary>
            <param name="contentDisposition">Content-Disposition</param>
            <returns>文件名</returns>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.BaiduMapHelper">
            <summary>
            百度地图静态图片API，文档：http://api.map.baidu.com/lbsapi/cloud/staticimg.htm
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.BaiduMapHelper.GetBaiduStaticMap(System.Double,System.Double,System.Int32,System.Int32,System.Collections.Generic.IList{Myvas.AspNetCore.Weixin.BaiduMarkers},System.Int32,System.Int32)">
             <summary>
             获取百度地图静态图片
             </summary>
             <param name="lng">中心点经度</param>
             <param name="lat">中心点维度</param>
             <param name="scale">返回图片大小会根据此标志调整。取值范围为1或2：
            1表示返回的图片大小为size= width * height;
            2表示返回图片为(width*2)*(height *2)，且zoom加1
            注：如果zoom为最大级别，则返回图片为（width*2）*（height*2），zoom不变。</param>
             <param name="zoom">地图级别。高清图范围[3, 18]；低清图范围[3,19]</param>
             <param name="markersList">标记列表，如果为null则不输出标记</param>
             <param name="width">图片宽度。取值范围：(0, 1024]。</param>
             <param name="height">图片高度。取值范围：(0, 1024]。</param>
             <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.FileStreamHelper.GetFileStream(System.String)">
            <summary>
            根据完整文件路径获取FileStream
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.HttpUtilityPost">
            <summary>
            
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.HttpUtilityPost.GetResult``1(System.String)">
            <summary>
            获取Post结果
            </summary>
            <typeparam name="T"></typeparam>
            <param name="returnText"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.HttpUtilityPost.PostFileGetJson``1(System.String,System.Net.CookieContainer,System.Collections.Generic.Dictionary{System.String,System.String},System.Text.Encoding)">
            <summary>
            发起Post请求
            </summary>
            <typeparam name="T">返回数据类型（Json对应的实体）</typeparam>
            <param name="url">请求Url</param>
            <param name="cookieContainer">CookieContainer，如果不需要则设为null</param>
            <param name="encoding">字符编码</param>
            <param name="fileDictionary"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.HttpUtilityPost.PostGetJson``1(System.String,System.Net.CookieContainer,System.IO.Stream,System.Text.Encoding)">
            <summary>
            发起Post请求
            </summary>
            <typeparam name="T">返回数据类型（Json对应的实体）</typeparam>
            <param name="url">请求Url</param>
            <param name="cookieContainer">CookieContainer，如果不需要则设为null</param>
            <param name="fileStream">文件流</param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.HttpUtilityPost.PostGetJson``1(System.String,System.Net.CookieContainer,System.Collections.Generic.Dictionary{System.String,System.String},System.Text.Encoding)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="url"></param>
            <param name="cookieContainer"></param>
            <param name="formData"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.GoogleMapHelper.GetGoogleStaticMap(System.Int32,System.Collections.Generic.IList{Myvas.AspNetCore.Weixin.GoogleMapMarkers},System.String)">
            <summary>
            获取谷歌今天静态地图Url。API介绍：https://developers.google.com/maps/documentation/staticmaps/?hl=zh-CN
            </summary>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.GpsHelper.Distance(System.Double,System.Double,System.Double,System.Double)">
             <summary>
            计算两点GPS坐标的距离（单位：米）
             </summary>
             <param name="n1">第一点的纬度坐标</param>
             <param name="e1">第一点的经度坐标</param>
             <param name="n2">第二点的纬度坐标</param>
             <param name="e2">第二点的经度坐标</param>
             <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.GpsHelper.GetLatitudeDifference(System.Double)">
            <summary>
            获取维度差
            </summary>
            <param name="km">千米</param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.GpsHelper.GetLongitudeDifference(System.Double)">
            <summary>
            获取经度差
            </summary>
            <param name="km">千米</param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.MsgTypeHelper.GetRequestMsgType(System.Xml.Linq.XDocument)">
            <summary>
            根据xml信息，返回RequestMsgType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.MsgTypeHelper.GetRequestMsgType(System.String)">
            <summary>
            根据xml信息，返回RequestMsgType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.MsgTypeHelper.GetResponseMsgType(System.Xml.Linq.XDocument)">
            <summary>
            根据xml信息，返回ResponseMsgType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.MsgTypeHelper.GetResponseMsgType(System.String)">
            <summary>
            根据xml信息，返回ResponseMsgType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.FileHelper.GetFileStream(System.String)">
            <summary>
            根据完整文件路径获取FileStream
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.HttpUtility.GetJson``1(System.String,System.Text.Encoding)">
            <summary>
            获取JSON数据。采用Http Get方式。
            </summary>
            <typeparam name="T">用于封装JSON数据的类</typeparam>
            <param name="url">API网址</param>
            <param name="encoding">编码。默认为UTF8</param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.HttpUtility.PostFileGetJson``1(System.String,System.Net.CookieContainer,System.Collections.Generic.Dictionary{System.String,System.String},System.Text.Encoding)">
            <summary>
            发起Post请求
            </summary>
            <typeparam name="T">返回数据类型（Json对应的实体）</typeparam>
            <param name="url">请求Url</param>
            <param name="cookieContainer">CookieContainer，如果不需要则设为null</param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.HttpUtility.PostGetJson``1(System.String,System.Net.CookieContainer,System.IO.Stream,System.Text.Encoding)">
            <summary>
            发起Post请求
            </summary>
            <typeparam name="T">返回数据类型（Json对应的实体）</typeparam>
            <param name="url">请求Url</param>
            <param name="cookieContainer">CookieContainer，如果不需要则设为null</param>
            <param name="fileStream">文件流</param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.HttpUtility.HttpGet(System.String,System.Text.Encoding)">
            <summary>
            使用Http Get方法获取字符串结果（没有加入Cookie）
            </summary>
            <param name="url"></param>
            <param name="encoding">返回值编码。默认为UTF8</param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.HttpUtility.Download(System.String,System.IO.Stream)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="stream">输出流</param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.HttpUtility.HttpPost(System.String,System.Net.CookieContainer,System.Collections.Generic.Dictionary{System.String,System.String},System.Text.Encoding,System.Int32)">
            <summary>
            使用Post方法获取字符串结果，常规提交
            </summary>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.HttpUtility.HttpPostXml(System.String,System.String,System.Text.Encoding,System.Int32)">
            <summary>
            使用Post方法获取字符串结果，常规提交
            </summary>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.HttpUtility.HttpPostJson(System.String,System.String,System.Text.Encoding,System.Int32)">
            <summary>
            使用Post方法获取字符串结果，常规提交
            </summary>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.HttpUtility.HttpPost(System.String,System.Net.CookieContainer,System.IO.Stream,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Text.Encoding,System.Int32)">
            <summary>
            使用Post方法获取字符串结果
            </summary>
            <param name="url"></param>
            <param name="cookieContainer"></param>
            <param name="postStream"></param>
            <param name="fileDictionary">需要上传的文件，Key：对应要上传的Name，Value：本地文件名</param>
            <param name="encoding"></param>
            <param name="refererUrl"></param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Myvas.AspNetCore.Weixin.HttpUtility.GetQueryString(System.Collections.Generic.Dictionary{System.String,System.String})" -->
        <member name="M:Myvas.AspNetCore.Weixin.WeixinJsonHelper.DecodeUnicode(System.Text.RegularExpressions.Match)">
            <summary>
            unicode解码
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WeixinJsonHelper.Deserialize``1(System.String)">
            <summary>
            获取Post结果
            </summary>
            <typeparam name="T"></typeparam>
            <param name="jsonResult"></param>
            <returns></returns>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.WeixinTimestampHelper.UnixEpoch">
            <summary>
            Unix起始时间
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.WeixinTimestampHelper.WeixinTimeZone">
            <summary>
            微信使用北京时间（+8时区）
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WeixinTimestampHelper.ToUtcTime(System.Int64)">
            <summary>
            将微信时间戳（整型数）转换为UTC时间
            </summary>
            <param name="weixinTimestamp">微信时间戳（整型数），与Unix时间戳一致</param>
            <returns>UTC时间</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">微信时间戳少于基准时间</exception>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WeixinTimestampHelper.ToLocalTime(System.Int64)">
            <summary>
            将微信时间戳（整型数）转换为本地时间
            </summary>
            <param name="weixinTimestamp">微信时间戳（整型数）</param>
            <returns>本地时间</returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WeixinTimestampHelper.ToLocalTime(System.String)">
            <summary>
            将微信时间戳（整型数字符串）转换为本地时间
            </summary>
            <param name="weixinTimestamp">微信时间戳（整型数字符串）</param>
            <returns>本地时间</returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WeixinTimestampHelper.FromBeijingTime(System.DateTime)">
            <summary>
            转换为Unix时间(微信适用)
            </summary>
            <param name="beijingTime">本地时间（+8时区）</param>
            <returns>Unix时间(微信适用)，整型</returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WeixinTimestampHelper.FromLocalTime(System.DateTime)">
            <summary>
            转换为Unix时间(微信适用)
            </summary>
            <param name="localTime">任何时间都行，不限定为北京时区</param>
            <returns>Unix时间(微信适用)，整型</returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.XmlConvert.SerializeObject(System.Object,System.Boolean,System.Text.Encoding)">
            <summary>
            序列化
            </summary>
            <param name="objectInstance"></param>
            <param name="encoding">编码，默认为：System.Text.Encoding.UTF8</param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.XmlConvert.DeserializeObject``1(System.String)">
            <summary>
            反序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objectData"></param>
            <returns></returns>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.WeixinErrorJson">
            <summary>
            微信API返回值（JSON）
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.WeixinErrorJson.errcode">
            <summary>
            微信错误代码
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.WeixinErrorJson.errmsg">
            <summary>
            微信错误描述
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.WeixinJson">
            <summary>
            微信API返回值（JSON）
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.WeixinResponseStatus">
            <summary>
            微信响应状态
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.WeixinResponseStatus.OK">
            <summary>
            正常, Code: 0
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.WeixinResponseStatus.WeixinError">
            <summary>
            微信错误，Code: 4xxxx-5xxxx
            特别地，系统繁忙, Code: -1
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.WeixinResponseStatus.CustomError">
            <summary>
            自定义错误, Code: -4xxxx
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.SignatureHelper">
            <summary>
            微信签名验证
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.SignatureHelper.ValidateSignature(System.String,System.String[])">
            <summary>
            检查签名是否正确
            </summary>
            <param name="signature">微信加密签名，signature结合了开发者填写的token参数和请求中的timestamp参数、nonce参数</param>
            <param name="args">所有参与签名的数据，例如：timestamp时间戳，nonce随机数，websiteToken微信网站特征字，加密消息体Encrypt</param>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.SignatureHelper.CalculateSignature(System.String[])">
            <summary>
            计算签名
            </summary>
            <param name="args">所有参与签名的数据，例如：timestamp时间戳，nonce随机数，websiteToken微信网站特征字，加密消息体Encrypt</param>
            <returns>签名字符串</returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WeixinClientValidator.IsWeixinClientRequest(System.Net.Http.HttpContent,System.String)">
            <summary>
            是否来自微信客户端浏览器
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.WeixinAccessTicket.Principal">
            <summary>
            Gets the claims-principal with authenticated user identities.
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WeixinAccessTicket.#ctor(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Initializes a new instance of the <see cref="T:Myvas.AspNetCore.Weixin.WeixinAccessTicket"/> class
            </summary>
            <param name="principal">the <see cref="T:System.Security.Claims.ClaimsPrincipal"/> that represents the authenticated user.</param>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.IMessageHandler.WeixinOpenId">
            <summary>
            发送者用户名（OpenId）
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.IMessageHandler.CancelExcute">
            <summary>
            取消执行Execute()方法。一般在OnExecuting()中用于临时阻止执行Execute()。
            <para>默认为False。</para>
            如果在执行OnExecuting()执行前设为True，则所有OnExecuting()、Execute()、OnExecuted()代码都不会被执行。
            如果在执行OnExecuting()执行过程中设为True，则后续Execute()及OnExecuted()代码不会被执行。
            <para>建议在设为True的时候，给ResponseMessage赋值，以返回友好信息。</para>
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.IMessageHandler.RequestDocument">
            <summary>
            在构造函数中转换得到原始XML数据
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.IMessageHandler.ResponseDocument">
            <summary>
            根据ResponseMessageBase获得转换后的ResponseDocument
            注意：这里每次请求都会根据当前的ResponseMessageBase生成一次，如需重用此数据，建议使用缓存或局部变量
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.IMessageHandler.RequestMessage">
            <summary>
            请求实体
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.IMessageHandler.ResponseMessage">
            <summary>
            响应实体
            只有当执行Execute()方法后才可能有值
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.IMessageHandler.UsedMessageAgent">
            <summary>
            是否使用了MessageAgent代理
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.IMessageHandler.Execute">
            <summary>
            执行微信请求
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.IMessageHandlerDocument">
            <summary>
            为IMessageHandler单独提供XDocument类型的属性接口（主要是ResponseDocument）。
            分离这个接口的目的是为了在MvcExtension中对IMessageHandler解耦，使用IMessageHandlerDocument接口直接操作XML。
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.IMessageHandlerDocument.RequestDocument">
            <summary>
            在构造函数中转换得到原始XML数据
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.IMessageHandlerDocument.ResponseDocument">
            <summary>
            根据ResponseMessageBase获得转换后的ResponseDocument
            注意：这里每次请求都会根据当前的ResponseMessageBase生成一次，如需重用此数据，建议使用缓存或局部变量
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.IMessageHandlerDocument.FinalResponseDocument">
            <summary>
            最后返回的ResponseDocument。
             如果是Senparc.Weixin.MP引用，并且未设置未加密，则应当和ResponseDocument一致；除此以外（Senparc.Weixin.QY或已加密），则应当在ResponseDocument基础上进行加密
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.IMessageHandlerDocument.TextResponseMessage">
            <summary>
            文字返回信息。使用规则：当TextResponseMessage不为null时（""!=null），才获取ResponseDocument。
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.Message.SendText(System.String,System.String,System.String)">
            <summary>
            发送文本消息
            </summary>
            <param name="accessToken"></param>
            <param name="openID"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.Message.SendImage(System.String,System.String,System.String)">
            <summary>
            发送图片消息
            </summary>
            <param name="accessToken"></param>
            <param name="openID"></param>
            <param name="mediaID"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.Message.SendVoice(System.String,System.String,System.String)">
            <summary>
            发送语音消息
            </summary>
            <param name="accessToken"></param>
            <param name="openID"></param>
            <param name="mediaID"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.Message.SendVideo(System.String,System.String,System.String,System.String)">
            <summary>
            发送视频消息
            </summary>
            <param name="accessToken"></param>
            <param name="openID"></param>
            <param name="mediaID"></param>
            <param name="thumbMediaID"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.Message.SendMusic(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            发送音乐消息
            </summary>
            <param name="accessToken"></param>
            <param name="openID"></param>
            <param name="title"></param>
            <param name="description"></param>
            <param name="musicUrl"></param>
            <param name="hqMusicUrl"></param>
            <param name="thumbMediaID"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.Message.SendNews(System.String,System.String,System.Collections.Generic.List{Myvas.AspNetCore.Weixin.Article})">
            <summary>
            发送图文消息
            </summary>
            <param name="accessToken"></param>
            <param name="openID"></param>
            <param name="articles"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.MessageTypeUtility.GetRequestMsgType(System.Xml.Linq.XDocument)">
            <summary>
            根据xml信息，返回RequestMsgType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.MessageTypeUtility.GetRequestMsgType(System.String)">
            <summary>
            根据xml信息，返回RequestMsgType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.MessageTypeUtility.GetResponseMsgType(System.Xml.Linq.XDocument)">
            <summary>
            根据xml信息，返回ResponseMsgType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.MessageTypeUtility.GetResponseMsgType(System.String)">
            <summary>
            根据xml信息，返回ResponseMsgType
            </summary>
            <returns></returns>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.WeixinMessageHandler">
            <summary>
            微信请求的集中处理方法
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WeixinMessageHandler.TeardownAsync">
            <summary>
            Called once after Invoke by the Middleware.
            </summary>
            <returns>async completion</returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WeixinMessageHandler.HandleAsync">
            <summary>
            执行微信请求
            </summary>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.WeixinMessageHandleResult">
            <summary>
            Contains the result of an WeixinMessageHandler.HandleRequest call
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.WeixinMessageHandleResult.Failure">
            <summary>
            Holds failure information from the <see cref="T:Myvas.AspNetCore.Weixin.WeixinMessageHandler"/>
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.WeixinMessageHandleResult.Handled">
            <summary>
            Indicates that stage of <see cref="T:Myvas.AspNetCore.Weixin.WeixinMessageHandler"/> was directly handled by user intervention and no
            further processing should be attempted.
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.CryptographyHelper.AesDecrypt(System.String,System.String,System.String@)">
            <summary>
            解密方法
            </summary>
            <param name="data">密文</param>
            <param name="encodingAesKey"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.CryptographyHelper.chr(System.Int32)">
            <summary>
            将数字转化成ASCII码对应的字符，用于对明文进行补码
            </summary>
            <param name="n">需要转化的数字</param>
            <returns>转化得到的字符</returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WeixinMessageEncryptor.#ctor(Microsoft.Extensions.Options.IOptions{Myvas.AspNetCore.Weixin.WeixinWelcomePageOptions},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            构造函数
            </summary>
            <param name="websiteToken">公众平台后台由开发者指定的Token</param>
            <param name="encodingAesKey">公众平台后台由开发者指定的EncodingAESKey</param>
            <param name="appId">公众帐号的appid</param>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WeixinMessageEncryptor.Decrypt(System.String,System.String,System.String,System.String)">
            <summary>
            检验消息的真实性，并获取解密后的明文
            </summary>
            <param name="msg_signature">签名串，对应URL参数的msg_signature</param>
            <param name="timestamp">时间戳，对应URL参数的timestamp</param>
            <param name="nonce">随机串，对应URL参数的nonce</param>
            <param name="data">密文，对应POST请求的数据</param>
            <returns>解密后的原文</returns>
            <exception cref="T:Myvas.AspNetCore.Weixin.WeixinMessageCryptographicException">异常</exception>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WeixinMessageEncryptor.Encrypt(System.String,System.String,System.String)">
            <summary>
            将微信号回复用户的消息加密打包
            </summary>
            <param name="data">微信号待回复用户的消息，xml格式的字符串</param>
            <param name="timestamp">时间戳，可以自己生成，也可以用URL参数的timestamp</param>
            <param name="nonce">随机串，可以自己生成，也可以用URL参数的nonce</param>
            <returns>加密后的可以直接回复用户的密文，包括msg_signature, timestamp, nonce, encrypt的xml格式的字符串</returns>
            <exception cref="T:Myvas.AspNetCore.Weixin.WeixinMessageCryptographicException">异常</exception>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.WeixinWelcomePageApplicationBuilderExtensions">
            <summary>
            IApplicationBuilder extensions for the WeixinWelcomePageMiddleware.
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WeixinWelcomePageApplicationBuilderExtensions.UseWeixinWelcomePage(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds the WeixinWelcomePageMiddleware to the pipeline with the DI options.
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.WeixinWelcomePageMiddleware">
            <summary>
            This middleware provides a default welcome/validation page for new Weixin App.
            </summary>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WeixinWelcomePageMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Process an individual request.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WeixinWelcomePageMiddleware.InvokeGet(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            指示微信公众号消息接收地址是否可用
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Myvas.AspNetCore.Weixin.WeixinWelcomePageMiddleware.InvokePost(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            微信公众号消息接收地址
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Myvas.AspNetCore.Weixin.WeixinWelcomePageOptions">
            <summary>
            Options for the WeixinWelcomePageMiddleware.
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.WeixinWelcomePageOptions.WebsiteToken">
            <summary>
            网站令牌(Token)，用于验证开发者服务器。
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.WeixinWelcomePageOptions.EncodingAESKey">
            <summary>
            消息加解密密钥
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.WeixinWelcomePageOptions.Debug">
            <summary>
            是否允许微信web开发工具等调试终端访问，默认为: false（不允许）。
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.WeixinWelcomePageOptions.Path">
            <summary>
            服务器地址路径，默认为: /wx
            </summary>
        </member>
        <member name="P:Myvas.AspNetCore.Weixin.WeixinWelcomePageOptions.Events">
            <summary>
            接收微信消息或事件
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.WeixinWelcomePageOptionsDefaults.Debug">
            <summary>
            default as false
            </summary>
        </member>
        <member name="F:Myvas.AspNetCore.Weixin.WeixinWelcomePageOptionsDefaults.Path">
            <summary>
            default as /weixin
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.WeixinAccessTokenServiceCollectionExtensions">
            <summary>
            Extension methods for setting up weixin access token services in an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.WeixinAccessTokenServiceCollectionExtensions.AddWeixinAccessToken(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Myvas.AspNetCore.Weixin.WeixinAccessTokenOptions})">
            <summary>
            Adds weixin access token services to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />. 
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add services to.</param>
            <param name="setupAction">An action delegate to configure the provided <see cref="T:Myvas.AspNetCore.Weixin.WeixinAccessTokenOptions"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> so that additional calls can be chained.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.Extensions.DependencyInjection.WeixinAccessTokenServiceCollectionExtensions.AddWeixinAccessToken(Microsoft.Extensions.DependencyInjection.IServiceCollection)" -->
        <member name="T:Microsoft.Extensions.DependencyInjection.WeixinServiceCollectionExtensions">
            <summary>
            Contains extension methods to <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> for configuring Weixin services.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.WeixinMessageProtectionServiceCollectionExtensions">
            <summary>
            Extension methods for setting up Weixin message protection services in an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.WeixinWelcomePageServiceCollectionExtensions">
            <summary>
            Contains extension methods to <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> for configuring identity services.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.WeixinWelcomePageServiceCollectionExtensions.AddWeixinWelcomePage(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Myvas.AspNetCore.Weixin.WeixinWelcomePageOptions})">
            <summary>
            Adds the default identity system configuration for the specified User and Role types.
            </summary>
        </member>
    </members>
</doc>
