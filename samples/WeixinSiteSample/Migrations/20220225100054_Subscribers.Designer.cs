// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeixinSiteSample.Data;

#nullable disable

namespace WeixinSiteSample.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220225100054_Subscribers")]
    partial class Subscribers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.2");

            modelBuilder.Entity("Myvas.AspNetCore.Weixin.EntityFrameworkCore.Entities.PersistedToken", b =>
                {
                    b.Property<string>("AppId")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpirationTime")
                        .HasColumnType("TEXT");

                    b.HasKey("AppId");

                    b.HasIndex("ExpirationTime");

                    b.ToTable("PersistedTokens");
                });

            modelBuilder.Entity("Myvas.AspNetCore.Weixin.EntityFrameworkCore.Entities.WeixinSubscriber", b =>
                {
                    b.Property<string>("OpenId")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("AvatorImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Language")
                        .HasColumnType("TEXT");

                    b.Property<string>("MentorId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nickname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Province")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("SubscribedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("UnionId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Unsubscribed")
                        .HasMaxLength(1000)
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("UnsubscribedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("OpenId");

                    b.HasIndex("OpenId");

                    b.ToTable("WeixinSubscriber", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
